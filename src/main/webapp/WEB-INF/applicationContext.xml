<b:beans xmlns="http://www.springframework.org/schema/security"
         xmlns:b="http://www.springframework.org/schema/beans"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:g="http://www.springframework.org/schema/util"
         xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
						http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">

    <authentication-manager>
        <authentication-provider ref="authenticationProvider"/>
    </authentication-manager>

    <global-method-security secured-annotations="enabled" />

    <b:bean name="authenticationProvider" class="catalogApp.server.security.CustomAuthenticationProvider" >
        <b:property name="userDetailsService" ref="userDetailsService"/>
    </b:bean>

    <http auto-config='true' use-expressions="true">
        <csrf disabled="true"/>
        <intercept-url pattern="/index.html" access="hasRole('USER')"/>
        <intercept-url pattern="/catalogApp/rest/addBook" access="hasRole('ADMIN')"/>
        <intercept-url pattern="/catalogApp/rest/addSong" access="hasRole('ADMIN')"/>
        <intercept-url pattern="/catalogApp/rest/allUsers" access="hasRole('ADMIN')"/>
        <intercept-url pattern="/catalogApp/rest/**" access="hasRole('USER')"/>
        <!--<intercept-url pattern="/**" access="IS_AUTHENTICATED_ANONYMOUSLY" />-->
        <logout logout-success-url="/j_spring_security_check"/>
    </http>

    <b:bean id="userDetailsService" class="catalogApp.server.security.UserDetailsServiceImpl">
        <b:constructor-arg ref="userDAO"/>
    </b:bean>

<!--    <b:bean id="userWebService" class="catalogApp.server.controllers.UserWebService">
        <b:constructor-arg ref="userDAO"/>
    </b:bean>-->

    <b:bean id="userWebService" class="catalogApp.server.controllers.UserWebService">
        <b:property name="jdbcService" ref="jdbcService"/>
        <b:property name="imageService" ref="imageService"/>
    </b:bean>

    <b:bean id="bookWebService" class="catalogApp.server.controllers.BookWebService">
        <b:property name="jdbcService" ref="jdbcService"/>
    </b:bean>

    <b:bean id="songWebService" class="catalogApp.server.controllers.SongWebService" >
        <b:property name="jdbcService" ref="jdbcService"/>
    </b:bean>

    <b:bean id="imageService" class="catalogApp.server.service.ImageService">
        <!--<b:property name="uploadPath" value="C:\\apache-tomcat-9.0.13\\webapps\\ROOT\\images\\"/>-->
        <b:property name="uploadPath" value="images\\"/>
    </b:bean>

    <b:bean id="jdbcService" class="catalogApp.server.service.JdbcService">
        <b:constructor-arg ref="jdbcEavDAO"/>
        <b:constructor-arg ref="userDAO"/>
    </b:bean>

    <b:bean id="userDAO" class="catalogApp.server.dao.UserDAO">
        <b:constructor-arg ref="jdbcTemplate"/>
    </b:bean>

    <b:bean id="jdbcEavDAO" class="catalogApp.server.dao.EavDAO">
        <b:constructor-arg ref="jdbcTemplate"/>
        <b:constructor-arg ref="namedParameterJdbcTemplate"/>
    </b:bean>

    <b:bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
        <b:constructor-arg ref="dataSource"/>
    </b:bean>

    <b:bean id="namedParameterJdbcTemplate" class="org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate">
        <b:constructor-arg ref="dataSource"/>
    </b:bean>

    <b:bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <b:property name="driverClassName" value="org.sqlite.JDBC" />
        <b:property name="url" value="jdbc:sqlite:C://Users//Сергей//IdeaProjects//NetCrackerPROJECT//DataBase//EAV_DB.db"/>
    </b:bean>


</b:beans>